// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThriveInternationalBackend.Data;

#nullable disable

namespace ThriveInternationalBackend.Migrations
{
    [DbContext(typeof(ThriveDbContext))]
    partial class ThriveDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ThriveInternationalBackend.Models.CommunityOutreach", b =>
                {
                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<string>("AlienNumber")
                        .HasColumnType("text")
                        .HasColumnName("alien_number");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text")
                        .HasColumnName("country_of_origin");

                    b.Property<string>("County")
                        .HasColumnType("text")
                        .HasColumnName("county");

                    b.Property<string>("DshsClientId")
                        .HasColumnType("text")
                        .HasColumnName("dshs_client_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<bool>("IsHeadOfHousehold")
                        .HasColumnType("boolean")
                        .HasColumnName("is_head_of_household");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("text")
                        .HasColumnName("mailing_address");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middle_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("text")
                        .HasColumnName("preferred_language");

                    b.Property<string>("RelationshipToHead")
                        .HasColumnType("text")
                        .HasColumnName("relationship_to_head");

                    b.Property<bool>("SameAsResidential")
                        .HasColumnType("boolean")
                        .HasColumnName("same_as_residential");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("text")
                        .HasColumnName("street_address");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text")
                        .HasColumnName("zip_code");

                    b.HasKey("RefugeeId");

                    b.ToTable("communityoutreach");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.HouseholdMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("ImmigrationStatus")
                        .HasColumnType("text")
                        .HasColumnName("immigration_status");

                    b.Property<string>("IntakeEligibilityNeeds")
                        .HasColumnType("text")
                        .HasColumnName("intake_eligibility_needs");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("relationship");

                    b.HasKey("Id");

                    b.HasIndex("RefugeeId");

                    b.ToTable("householdmembers");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ImmigrationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AsylumDateGranted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("asylum_date_granted");

                    b.Property<DateTime?>("EligibilityDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("eligibility_date");

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("RefugeeId");

                    b.ToTable("immigrationstatus");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.LiabilityAgreements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("InsuranceLiability")
                        .HasColumnType("boolean")
                        .HasColumnName("insurance_liability");

                    b.Property<string>("InsuranceLiabilitySignature")
                        .HasColumnType("text")
                        .HasColumnName("insurance_liability_signature");

                    b.Property<bool>("MediaRelease")
                        .HasColumnType("boolean")
                        .HasColumnName("media_release");

                    b.Property<string>("MediaReleaseSignature")
                        .HasColumnType("text")
                        .HasColumnName("media_release_signature");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<bool>("WaiverAndRelease")
                        .HasColumnType("boolean")
                        .HasColumnName("waiver_and_release");

                    b.Property<string>("WaiverAndReleaseSignature")
                        .HasColumnType("text")
                        .HasColumnName("waiver_and_release_signature");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("liabilityagreements");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ProgramEligibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgeOver16")
                        .HasColumnType("boolean")
                        .HasColumnName("age_over_16");

                    b.Property<bool>("ApprovedImmigrationStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("approved_immigration_status");

                    b.Property<bool>("ArrivedAfterJuly2021")
                        .HasColumnType("boolean")
                        .HasColumnName("arrived_after_july_2021");

                    b.Property<bool>("ConsentFormCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("consent_form_completed");

                    b.Property<bool>("EligibleForServices")
                        .HasColumnType("boolean")
                        .HasColumnName("eligible_for_services");

                    b.Property<bool>("ImmigrationStatusCopy")
                        .HasColumnType("boolean")
                        .HasColumnName("immigration_status_copy");

                    b.Property<bool>("LivesInWashington")
                        .HasColumnType("boolean")
                        .HasColumnName("lives_in_washington");

                    b.Property<bool>("ReceivingServices")
                        .HasColumnType("boolean")
                        .HasColumnName("receiving_services");

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<bool>("ReleaseFormCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("release_form_completed");

                    b.HasKey("Id");

                    b.HasIndex("RefugeeId");

                    b.ToTable("programeligibility");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ProgramType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlienNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AsylumDateGranted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EMM")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EligibilityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("InternalReferral")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<string[]>("InternalReferralOptions")
                        .HasColumnType("text[]");

                    b.Property<bool>("ORIA")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<string[]>("ORIAOptions")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("ProgramTypes");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.Referrals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ReferralType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("referral_type");

                    b.Property<string>("ReferredProgram")
                        .HasColumnType("text")
                        .HasColumnName("referred_program");

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.HasKey("Id");

                    b.HasIndex("RefugeeId");

                    b.ToTable("referrals");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.Refugee", b =>
                {
                    b.Property<int>("RefugeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RefugeeId"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text")
                        .HasColumnName("country_of_origin");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("RefugeeId");

                    b.ToTable("refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ServicesNeeded", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("service_type");

                    b.HasKey("Id");

                    b.HasIndex("RefugeeId");

                    b.ToTable("servicesneeded");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ServicesProvided", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfService")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_service");

                    b.Property<string>("NextStep")
                        .HasColumnType("text")
                        .HasColumnName("next_step");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<int>("OutreachId")
                        .HasColumnType("integer")
                        .HasColumnName("outreach_id");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.HasKey("Id");

                    b.HasIndex("OutreachId");

                    b.ToTable("servicesprovided");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.Student", b =>
                {
                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer")
                        .HasColumnName("refugee_id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text")
                        .HasColumnName("country_of_origin");

                    b.Property<string>("CurrentGrade")
                        .HasColumnType("text")
                        .HasColumnName("current_grade");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("LanguagesSpoken")
                        .HasColumnType("text")
                        .HasColumnName("languages_spoken");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("text")
                        .HasColumnName("parent_email");

                    b.Property<string>("ParentLanguagesSpoken")
                        .HasColumnType("text")
                        .HasColumnName("parent_languages_spoken");

                    b.Property<string>("ParentName")
                        .HasColumnType("text")
                        .HasColumnName("parent_name");

                    b.Property<string>("ParentPhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("parent_phone_number");

                    b.Property<string>("PreferredContactMethod")
                        .HasColumnType("text")
                        .HasColumnName("preferred_contact_method");

                    b.Property<string>("School")
                        .HasColumnType("text")
                        .HasColumnName("school");

                    b.HasKey("RefugeeId");

                    b.ToTable("student");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ThriveIntakeFormData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AlienNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AsylumDateGranted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EligibilityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("ImmigrationStatus")
                        .HasColumnType("text[]");

                    b.Property<DateTime?>("IntakeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("NavigatorName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int?>("ProgramEligibilityId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProgramTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("RefugeeId")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<string[]>("ServicesNeeded")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("ProgramEligibilityId");

                    b.HasIndex("ProgramTypeId");

                    b.ToTable("ThriveIntakeForms");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.CommunityOutreach", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.HouseholdMembers", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ImmigrationStatus", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.LiabilityAgreements", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ProgramEligibility", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.Referrals", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ServicesNeeded", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ServicesProvided", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.CommunityOutreach", "CommunityOutreach")
                        .WithMany()
                        .HasForeignKey("OutreachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityOutreach");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.Student", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.Refugee", "Refugee")
                        .WithMany()
                        .HasForeignKey("RefugeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refugee");
                });

            modelBuilder.Entity("ThriveInternationalBackend.Models.ThriveIntakeFormData", b =>
                {
                    b.HasOne("ThriveInternationalBackend.Models.ProgramEligibility", "ProgramEligibility")
                        .WithMany()
                        .HasForeignKey("ProgramEligibilityId");

                    b.HasOne("ThriveInternationalBackend.Models.ProgramType", "ProgramType")
                        .WithMany()
                        .HasForeignKey("ProgramTypeId");

                    b.Navigation("ProgramEligibility");

                    b.Navigation("ProgramType");
                });
#pragma warning restore 612, 618
        }
    }
}
