{"ast":null,"code":"import API_BASE_URL from\"../config\";export const submitForm=async(endpoint,data)=>{const response=await fetch(`${API_BASE_URL}/ThriveIntake/${endpoint}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({formData:data})// ✅ Wrap in formData object\n});if(!response.ok){const errorData=await response.json();throw new Error(`Failed to submit form: ${JSON.stringify(errorData)}`);}return response.json();};// ✅ Fetch all refugees\nexport const fetchRefugees=async()=>{try{const response=await fetch(`${API_BASE_URL}/Refugees`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error(`Failed to fetch refugees: ${response.status}`);}return response.json();}catch(error){console.error(\"Error fetching refugees:\",error);throw error;}};// ✅ Fetch a single refugee by Last Name and Date of Birth\nexport const fetchRefugeeByIdentity=async(lastName,dob)=>{try{const response=await fetch(`${API_BASE_URL}/Refugees?lastName=${lastName}&dob=${dob}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error(`Failed to fetch refugee: ${response.status}`);}return response.json();}catch(error){console.error(\"Error fetching refugee:\",error);throw error;}};// ✅ Fetch all intake form submissions\nexport const fetchAllIntakeForms=async()=>{try{const response=await fetch(`${API_BASE_URL}/ThriveIntake`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error(`Failed to fetch intake forms: ${response.status}`);}return response.json();}catch(error){console.error(\"Error fetching intake forms:\",error);throw error;}};","map":{"version":3,"names":["API_BASE_URL","submitForm","endpoint","data","response","fetch","method","headers","body","JSON","stringify","formData","ok","errorData","json","Error","fetchRefugees","status","error","console","fetchRefugeeByIdentity","lastName","dob","fetchAllIntakeForms"],"sources":["/Users/parbhatrai/Desktop/newMain/cscd-488-490-project-team-i-thrive-international/src/services/apiService.ts"],"sourcesContent":["import API_BASE_URL from \"../config\";\n\nexport const submitForm = async (endpoint: string, data: any) => {\n    const response = await fetch(`${API_BASE_URL}/ThriveIntake/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ formData: data }), // ✅ Wrap in formData object\n    });\n\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Failed to submit form: ${JSON.stringify(errorData)}`);\n    }\n\n    return response.json();\n};\n\n\n\n\n\n// ✅ Fetch all refugees\nexport const fetchRefugees = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/Refugees`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch refugees: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching refugees:\", error);\n        throw error;\n    }\n};\n\n// ✅ Fetch a single refugee by Last Name and Date of Birth\nexport const fetchRefugeeByIdentity = async (lastName: string, dob: string) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/Refugees?lastName=${lastName}&dob=${dob}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch refugee: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching refugee:\", error);\n        throw error;\n    }\n};\n\n// ✅ Fetch all intake form submissions\nexport const fetchAllIntakeForms = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/ThriveIntake`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch intake forms: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching intake forms:\", error);\n        throw error;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}