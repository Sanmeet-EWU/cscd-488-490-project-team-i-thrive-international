{"ast":null,"code":"import API_BASE_URL from \"../config\"; // Import from config.ts\n\nexport const submitForm = async (endpoint, data) => {\n  const response = await fetch(`${API_BASE_URL}/ThriveIntake/${endpoint}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to submit form\");\n  }\n  return response.json();\n};\n\n// ✅ Fetch all refugees\nexport const fetchRefugees = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/Refugees`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch refugees: ${response.status}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching refugees:\", error);\n    throw error;\n  }\n};\n\n// ✅ Fetch a single refugee by Last Name and Date of Birth\nexport const fetchRefugeeByIdentity = async (lastName, dob) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/Refugees?lastName=${lastName}&dob=${dob}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch refugee: ${response.status}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching refugee:\", error);\n    throw error;\n  }\n};\n\n// ✅ Fetch all intake form submissions\nexport const fetchAllIntakeForms = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/ThriveIntake`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch intake forms: ${response.status}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching intake forms:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","submitForm","endpoint","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","fetchRefugees","status","error","console","fetchRefugeeByIdentity","lastName","dob","fetchAllIntakeForms"],"sources":["/Users/parbhatrai/Desktop/FreshStart/Front/cscd-488-490-project-team-i-thrive-international/src/services/apiService.ts"],"sourcesContent":["import API_BASE_URL from \"../config\"; // Import from config.ts\n\nexport const submitForm = async (endpoint: string, data: any) => {\n    const response = await fetch(`${API_BASE_URL}/ThriveIntake/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        throw new Error(\"Failed to submit form\");\n    }\n\n    return response.json();\n};\n\n\n\n\n// ✅ Fetch all refugees\nexport const fetchRefugees = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/Refugees`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch refugees: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching refugees:\", error);\n        throw error;\n    }\n};\n\n// ✅ Fetch a single refugee by Last Name and Date of Birth\nexport const fetchRefugeeByIdentity = async (lastName: string, dob: string) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/Refugees?lastName=${lastName}&dob=${dob}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch refugee: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching refugee:\", error);\n        throw error;\n    }\n};\n\n// ✅ Fetch all intake form submissions\nexport const fetchAllIntakeForms = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/ThriveIntake`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch intake forms: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching intake forms:\", error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,WAAW,CAAC,CAAC;;AAEtC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,IAAS,KAAK;EAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,iBAAiBE,QAAQ,EAAE,EAAE;IACrEI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC7B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAKD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAW,EAAE;MACrDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6BR,QAAQ,CAACW,MAAM,EAAE,CAAC;IACnE;IAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,sBAAsB,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,GAAW,KAAK;EAC3E,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,sBAAsBmB,QAAQ,QAAQC,GAAG,EAAE,EAAE;MACrFd,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,4BAA4BR,QAAQ,CAACW,MAAM,EAAE,CAAC;IAClE;IAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,eAAe,EAAE;MACzDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,iCAAiCR,QAAQ,CAACW,MAAM,EAAE,CAAC;IACvE;IAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}