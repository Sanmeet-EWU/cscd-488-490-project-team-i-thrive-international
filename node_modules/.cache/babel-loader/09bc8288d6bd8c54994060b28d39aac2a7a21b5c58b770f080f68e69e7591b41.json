{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5085/api';\nexport const submitForm = async (formType, data) => {\n  try {\n    if (formType === \"ThriveIntake\") {\n      const refugeeData = {\n        firstName: data.firstName,\n        lastName: data.lastName,\n        dateOfBirth: data.dateOfBirth,\n        // Already in ISO format from frontend\n        gender: data.gender,\n        countryOfOrigin: data.countryOfOrigin,\n        phoneNumber: data.phoneNumber,\n        emailAddress: data.emailAddress,\n        address: data.address\n      };\n      const refugeeResponse = await axios.post(`${API_BASE_URL}/refugees`, refugeeData);\n      const refugeeId = refugeeResponse.data.refugeeId;\n      const intakeFormData = {\n        refugeeId: refugeeId,\n        formType: \"ThriveIntake\",\n        intakeDate: data.intakeDate,\n        navigatorName: data.navigatorName,\n        programTypeJson: JSON.stringify(data.programType),\n        asylumDateGranted: data.asylumDateGranted,\n        alienNumber: data.alienNumber,\n        eligibilityDate: data.eligibilityDate,\n        programEligibilityJson: JSON.stringify(data.programEligibility),\n        servicesNeeded: data.servicesNeeded\n      };\n      const intakeResponse = await axios.post(`${API_BASE_URL}/intakeforms`, intakeFormData);\n      return {\n        refugeeId,\n        intakeData: intakeResponse.data\n      };\n    } else if (formType === \"NewStudentRegistration\") {\n      const studentData = {\n        refugeeId: data.refugeeId,\n        firstName: data.student.firstName,\n        lastName: data.student.lastName,\n        birthDate: data.student.birthDate ? data.student.birthDate.split('T')[0] : null,\n        // Convert to \"YYYY-MM-DD\"\n        address: data.student.address,\n        gender: data.student.gender,\n        school: data.student.school,\n        currentGrade: data.student.currentGrade,\n        languagesSpoken: data.student.languagesSpoken,\n        countryOfOrigin: data.student.countryOfOrigin,\n        parentName: data.parent.parentName,\n        parentLanguagesSpoken: data.parent.languagesSpoken,\n        parentPhoneNumber: data.parent.parentPhoneNumber,\n        parentEmail: data.parent.parentEmail,\n        preferredContactMethod: data.parent.preferredContactMethod,\n        insuranceLiability: data.liability.insuranceLiability,\n        insuranceLiabilitySignature: data.liability.insuranceLiabilitySignature,\n        waiverAndRelease: data.liability.waiverAndRelease,\n        waiverAndReleaseSignature: data.liability.waiverAndReleaseSignature,\n        mediaRelease: data.liability.mediaRelease,\n        mediaReleaseSignature: data.liability.mediaReleaseSignature\n      };\n      console.log(\"Submitting student data:\", JSON.stringify(studentData, null, 2)); // Log payload before sending\n      const studentResponse = await axios.post(`${API_BASE_URL}/students`, studentData);\n      return studentResponse.data;\n    } else {\n      throw new Error(\"Unknown form type\");\n    }\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('API Error:', {\n      message: error.message,\n      response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n    });\n    throw error;\n  }\n};\nexport const fetchRefugeeById = async refugeeId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/refugees/${refugeeId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Error fetching refugee:', {\n      message: error.message,\n      response: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n      status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status\n    });\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","submitForm","formType","data","refugeeData","firstName","lastName","dateOfBirth","gender","countryOfOrigin","phoneNumber","emailAddress","address","refugeeResponse","post","refugeeId","intakeFormData","intakeDate","navigatorName","programTypeJson","JSON","stringify","programType","asylumDateGranted","alienNumber","eligibilityDate","programEligibilityJson","programEligibility","servicesNeeded","intakeResponse","intakeData","studentData","student","birthDate","split","school","currentGrade","languagesSpoken","parentName","parent","parentLanguagesSpoken","parentPhoneNumber","parentEmail","preferredContactMethod","insuranceLiability","liability","insuranceLiabilitySignature","waiverAndRelease","waiverAndReleaseSignature","mediaRelease","mediaReleaseSignature","console","log","studentResponse","Error","error","_error$response","_error$response2","message","response","status","fetchRefugeeById","get","_error$response3","_error$response4"],"sources":["/Users/parbhatrai/Desktop/Namrata/cscd-488-490-project-team-i-thrive-international/src/services/apiService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5085/api';\n\nexport const submitForm = async (formType: string, data: any) => {\n  try {\n    if (formType === \"ThriveIntake\") {\n      const refugeeData = {\n        firstName: data.firstName,\n        lastName: data.lastName,\n        dateOfBirth: data.dateOfBirth, // Already in ISO format from frontend\n        gender: data.gender,\n        countryOfOrigin: data.countryOfOrigin,\n        phoneNumber: data.phoneNumber,\n        emailAddress: data.emailAddress,\n        address: data.address\n      };\n\n      const refugeeResponse = await axios.post(`${API_BASE_URL}/refugees`, refugeeData);\n      const refugeeId = refugeeResponse.data.refugeeId;\n\n      const intakeFormData = {\n        refugeeId: refugeeId,\n        formType: \"ThriveIntake\",\n        intakeDate: data.intakeDate,\n        navigatorName: data.navigatorName,\n        programTypeJson: JSON.stringify(data.programType),\n        asylumDateGranted: data.asylumDateGranted,\n        alienNumber: data.alienNumber,\n        eligibilityDate: data.eligibilityDate,\n        programEligibilityJson: JSON.stringify(data.programEligibility),\n        servicesNeeded: data.servicesNeeded\n      };\n\n      const intakeResponse = await axios.post(`${API_BASE_URL}/intakeforms`, intakeFormData);\n      return { refugeeId, intakeData: intakeResponse.data };\n    } \n    else if (formType === \"NewStudentRegistration\") {\n      const studentData = {\n        refugeeId: data.refugeeId,\n        firstName: data.student.firstName,\n        lastName: data.student.lastName,\n        birthDate: data.student.birthDate ? data.student.birthDate.split('T')[0] : null, // Convert to \"YYYY-MM-DD\"\n        address: data.student.address,\n        gender: data.student.gender,\n        school: data.student.school,\n        currentGrade: data.student.currentGrade,\n        languagesSpoken: data.student.languagesSpoken,\n        countryOfOrigin: data.student.countryOfOrigin,\n        parentName: data.parent.parentName,\n        parentLanguagesSpoken: data.parent.languagesSpoken,\n        parentPhoneNumber: data.parent.parentPhoneNumber,\n        parentEmail: data.parent.parentEmail,\n        preferredContactMethod: data.parent.preferredContactMethod,\n        insuranceLiability: data.liability.insuranceLiability,\n        insuranceLiabilitySignature: data.liability.insuranceLiabilitySignature,\n        waiverAndRelease: data.liability.waiverAndRelease,\n        waiverAndReleaseSignature: data.liability.waiverAndReleaseSignature,\n        mediaRelease: data.liability.mediaRelease,\n        mediaReleaseSignature: data.liability.mediaReleaseSignature\n      };\n\n      console.log(\"Submitting student data:\", JSON.stringify(studentData, null, 2)); // Log payload before sending\n      const studentResponse = await axios.post(`${API_BASE_URL}/students`, studentData);\n      return studentResponse.data;\n    }\n    else {\n      throw new Error(\"Unknown form type\");\n    }\n  } catch (error: any) {\n    console.error('API Error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status\n    });\n    throw error;\n  }\n};\n\nexport const fetchRefugeeById = async (refugeeId: number) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/refugees/${refugeeId}`);\n    return response.data;\n  } catch (error: any) {\n    console.error('Error fetching refugee:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status\n    });\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}